Перем ИмяЭлементаДанных;
Перем ИмяЭлементаДанныхИдетОбработка;
Перем ИмяСобытияЖурналаРегистрации;
Перем СерверZabbix;
Перем ИмяСервераДляЭлементовДанных;
Перем РежимЭмуляции;

#Область ПубличныйИнтерфейс

Процедура Инициализировать(ЭлементДанных) Экспорт
	
	Если ТипЗнч(ЭлементДанных) = Тип("ПеречислениеСсылка.ZabbixPassiveItems") Тогда
		ИмяЭлементаДанных = ИмяЭлементаДанныхПоЗначениюПеречисления(ЭлементДанных); 
		ИмяЭлементаДанныхИдетОбработка = ИмяЭлементаДанных + "Status"; 
	Иначе
		ИмяЭлементаДанных = ЭлементДанных; 
		ИмяЭлементаДанныхИдетОбработка = ИмяЭлементаДанных + "Status"; 
	КонецЕсли; 
	
	ИмяСобытияЖурналаРегистрации = "ZabbixМониторинг";
	
	СерверZabbix = Константы.ZabbixАдресСервера.Получить();
	
	Если НЕ ЗначениеЗаполнено(СерверZabbix) Тогда
		
		Комментарий = "Сервер zabbix не указан. Отправка данных мониторинга выполнятся не будет!";
		
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, , , Комментарий);	
		
	КонецЕсли; 
	
	ИмяСервераДляЭлементовДанных = Константы.ZabbixИмяСервераДляЭлементовДанных.Получить();
	
	Если НЕ ЗначениеЗаполнено(ИмяСервераДляЭлементовДанных) Тогда
		
		Комментарий = "Имя сервера для отправки элементов данных не указано. Отправка данных мониторинга выполнятся не будет!";
		
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, , , Комментарий);	
		
	КонецЕсли; 
	
	РежимЭмуляции = Ложь;

КонецПроцедуры

Процедура ВключитьРежимЭмуляции() Экспорт
	
	РежимЭмуляции = Истина;

КонецПроцедуры


Процедура ОтправитьСостояниеУспех() Экспорт
	
	Состояние = "Успех";
	
	Если РежимЭмуляции Тогда
		ТекстСообщения = "ZabbixМониторинг.Режим эмуляции.Было бы отправлено состояние [%1] для элемента данных %2";
		ТекстСообщения = СтрШаблон(ТекстСообщения, Состояние, ИмяЭлементаДанных);
		Сообщить(ТекстСообщения);
		Возврат;
	КонецЕсли; 
	
	Попытка
		ОтправитьДанныеВZabbix("OK", ИмяЭлементаДанных);	
	Исключение
		
		Комментарий = "Ошибка отправки состояния [%3] для элемента данных %1. Описание ошибки: %2";
		Комментарий = СтрШаблон(Комментарий, ИмяЭлементаДанных, ОписаниеОшибки(), Состояние); 
		
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, , , Комментарий);	
	КонецПопытки;
	
КонецПроцедуры

Процедура ОтправитьСостояниеСбой() Экспорт
	
	Состояние = "Сбой";
	
	Если РежимЭмуляции Тогда
		
		ТекстСообщения = "ZabbixМониторинг.Режим эмуляции.Было бы отправлено состояние [%1] для элемента данных %2";
		ТекстСообщения = СтрШаблон(ТекстСообщения, Состояние, ИмяЭлементаДанных);
		Сообщить(ТекстСообщения);

		Возврат;
	КонецЕсли; 

	Попытка
		ОтправитьДанныеВZabbix("FAIL", ИмяЭлементаДанных);	
	Исключение
		
		Комментарий = "Ошибка отправки состояния [%3] для элемента данных %1. Описание ошибки: %2";
		Комментарий = СтрШаблон(Комментарий, ИмяЭлементаДанных, ОписаниеОшибки(),Состояние); 
		
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, , , Комментарий);	
		
	КонецПопытки;

КонецПроцедуры

Процедура ОтправитьСостояниеИдетОбработка() Экспорт
	
	Состояние = "Идет обработка";
	
	Если РежимЭмуляции Тогда
		
		ТекстСообщения = "ZabbixМониторинг.Режим эмуляции.Было бы отправлено состояние [%1] для элемента данных %2";
		ТекстСообщения = СтрШаблон(ТекстСообщения, Состояние, ИмяЭлементаДанныхИдетОбработка);
		Сообщить(ТекстСообщения);

		Возврат;
	КонецЕсли; 

	Попытка
		ОтправитьДанныеВZabbix("WORKING", ИмяЭлементаДанныхИдетОбработка);	
	Исключение
		
		Комментарий = "Ошибка отправки состояния [%3] для элемента данных %1. Описание ошибки: %2";
		Комментарий = СтрШаблон(Комментарий, ИмяЭлементаДанныхИдетОбработка, ОписаниеОшибки(), Состояние); 
		
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, , , Комментарий);	
		
	КонецПопытки;

КонецПроцедуры

Процедура ОтправитьПроизвольныеДанные(Данные) Экспорт
	
	Если РежимЭмуляции Тогда
		
		ТекстСообщения = "ZabbixМониторинг.Режим эмуляции.Было бы отправлены данные [%1] в элемент данных %2";
		ТекстСообщения = СтрШаблон(ТекстСообщения, Данные, ИмяЭлементаДанных);
		Сообщить(ТекстСообщения);

		Возврат;
	КонецЕсли; 

	Попытка
		ОтправитьДанныеВZabbixЧерезPOST(Данные, ИмяЭлементаДанных);	
	Исключение
		
		Комментарий = "Ошибка отправки данных [%3] в элемент данных %1. Описание ошибки: %2";
		Комментарий = СтрШаблон(Комментарий, ИмяЭлементаДанныхИдетОбработка, ОписаниеОшибки(), Данные); 
		
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, , , Комментарий);	
		
	КонецПопытки;
	
		
КонецПроцедуры


#КонецОбласти 

#Область СлужебныеПроцедурыФункции

Функция ИмяЭлементаДанныхПоЗначениюПеречисления(ЭлементДанных)
	
	ОбъектМетаданных = ЭлементДанных.Метаданные();
	
	ИндексЗначения = Перечисления[ОбъектМетаданных.Имя].Индекс(ЭлементДанных);
	
	Возврат ОбъектМетаданных.ЗначенияПеречисления[ИндексЗначения].Имя;
		
КонецФункции

Процедура ОтправитьДанныеВZabbix(Значение, ИмяОбновляемогоЭлементаДанных)

	Если НЕ ЗначениеЗаполнено(СерверZabbix) 
		ИЛИ НЕ ЗначениеЗаполнено(ИмяСервераДляЭлементовДанных) Тогда
		
		Возврат;		
		
	КонецЕсли; 
	
	Соединение = Новый HTTPСоединение(СерверZabbix,,,,, 60);
	
	СтрокаЗапроса = ШаблонПараметровURL();

	СтрокаЗапроса = СтрШаблон(СтрокаЗапроса, 
		КодироватьСтроку(ИмяСервераДляЭлементовДанных, СпособКодированияСтроки.КодировкаURL), 
		КодироватьСтроку(ИмяОбновляемогоЭлементаДанных, СпособКодированияСтроки.КодировкаURL), 
		КодироватьСтроку(Значение, СпособКодированияСтроки.КодировкаURL));
		
	СтрокаЗапроса = ШаблонURL() + "?" + СтрокаЗапроса;
	
	Запрос = Новый HTTPЗапрос(СтрокаЗапроса);
	
	Ответ = Соединение.Получить(Запрос);
	
	Если Ответ.КодСостояния <> 200 Тогда
		
		ОтветСервера = Ответ.ПолучитьТелоКакСтроку(); 
		
		СообщениеОбОшибке = "Ошибка отправки значения элемента данных на сервер Zabbix. Сервер вернул код ответа " + 
			Ответ.КодСостояния + 
			". Ответ сервера " + 
			ОтветСервера; 
			
		ВызватьИсключение СообщениеОбОшибке;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтправитьДанныеВZabbixЧерезPOST(Значение, ИмяОбновляемогоЭлементаДанных)

	Если НЕ ЗначениеЗаполнено(СерверZabbix) 
		ИЛИ НЕ ЗначениеЗаполнено(ИмяСервераДляЭлементовДанных) Тогда
		
		Возврат;		
		
	КонецЕсли; 
	
	Соединение = Новый HTTPСоединение(СерверZabbix,,,,, 60);
	
	СтрокаПараметров = ШаблонПараметровURL();

	СтрокаПараметров = СтрШаблон(СтрокаПараметров, 
		КодироватьСтроку(ИмяСервераДляЭлементовДанных, СпособКодированияСтроки.КодировкаURL), 
		КодироватьСтроку(ИмяОбновляемогоЭлементаДанных, СпособКодированияСтроки.КодировкаURL), 
		КодироватьСтроку(Значение, СпособКодированияСтроки.КодировкаURL));
		
	URLЗапроса = ШаблонURL();
	
	Запрос = Новый HTTPЗапрос(URLЗапроса);
	
	Запрос.Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded; charset=utf-8");
	
	Запрос.УстановитьТелоИзСтроки(СтрокаПараметров);
	
	Ответ = Соединение.ОтправитьДляОбработки(Запрос);
	
	Если Ответ.КодСостояния <> 200 Тогда
		
		ОтветСервера = Ответ.ПолучитьТелоКакСтроку(); 
		
		СообщениеОбОшибке = "Ошибка отправки значения элемента данных на сервер Zabbix. Сервер вернул код ответа " + 
			Ответ.КодСостояния + 
			". Ответ сервера " + 
			ОтветСервера; 
			
		ВызватьИсключение СообщениеОбОшибке;
	КонецЕсли;
	
КонецПроцедуры


Функция ШаблонURL()
	Возврат "zabbix/zabbix_sender/index.php";
КонецФункции

Функция ШаблонПараметровURL()
	Возврат "server=%1&key=%2&value=%3";
КонецФункции


#КонецОбласти 
