////////////////////////////////////////////////////////////
// Описание пакета для сборки и установки
// Полную документацию см. на hub.oscript.io/packaging
//

///////////////////////////////////////////////////////////////////
// Процедуры установки пакета с клиентской машины        
///////////////////////////////////////////////////////////////////


// Вызывается пакетным менеджером после распаковки пакета на клиентскую машину.
// 
// Параметры:
//   КаталогУстановкиПакета - строка. Путь в который пакетный менеджер устанавливает текущий пакет.
// 
Процедура ПриУстановке(Знач КаталогУстановкиПакета, СтандартнаяОбработка) Экспорт
	// TODO: Реализуйте спец. логику установки, если требуется
КонецПроцедуры


///////////////////////////////////////////////////////////////////
// Процедуры сборки пакета                                          
///////////////////////////////////////////////////////////////////


// Вызывается пакетным менеджером перед началом сборки пакета.
// 
// Параметры:
//   РабочийКаталог - Строка - Текущий рабочий каталог с исходниками пакета.
// 
Процедура ПередСборкой(Знач РабочийКаталог) Экспорт
	// TODO: Реализуйте спец. логику сборки, если требуется
КонецПроцедуры


// Вызывается пакетным менеджером после помещения файлов в пакет.
// 
// Параметры:
//   РабочийКаталог - Строка - Текущий рабочий каталог с исходниками пакета.
//   АрхивПакета - ЗаписьZIPФайла - ZIP-архив с содержимым пакета (включаемые файлы).
// 
Процедура ПриСборке(Знач РабочийКаталог, Знач АрхивПакета) Экспорт
	// TODO: Реализуйте спец. логику сборки, если требуется
	// АрхивПакета.Добавить(ПолныйПутьНужногоФайла,
	//	РежимСохраненияПутейZIP.СохранятьОтносительныеПути,
	//	РежимОбработкиПодкаталоговZIP.ОбрабатыватьРекурсивно);
КонецПроцедуры


// Вызывается пакетным менеджером после сборки пакета.
// 
// Параметры:
//   РабочийКаталог - Строка - Текущий рабочий каталог с исходниками пакета.
//   ПутьКФайлуПакета - Строка - Полный путь к собранному файлу пакета.
// 
Процедура ПослеСборки(Знач РабочийКаталог, Знач ПутьКФайлуПакета) Экспорт
	// TODO: Реализуйте спец. логику сборки, если требуется
КонецПроцедуры

ПутьКСценариюПараметров = ОбъединитьПути(ТекущийСценарий().Каталог, "src", "Модули", "ПараметрыПриложения.os");
ПараметрыПриложения = ЗагрузитьСценарий(ПутьКСценариюПараметров);

Описание.Имя(ПараметрыПриложения.ИмяПриложения())
        .Версия(ПараметрыПриложения.Версия())
        .Автор("Группа разработчиков торговай сети РЕМИ")
        .АдресАвтора("1c@itprofi.ru")
        .Описание("Библиотека для отправки состояния кластеров 1С в систему мониторинга Zabbix")
        .ВерсияСреды("1.0.11")
        .ВключитьФайл("src")
        .ВключитьФайл("doc")
        .ВключитьФайл("tests")
        .ВключитьФайл("tools")
        .ВключитьФайл("packagedef")
        .ЗависитОт("asserts",           "1.3.0")
        .ЗависитОт("fs",                "1.0.0")
        .ЗависитОт("logos",             "1.3.0")
        .ЗависитОт("strings",           "0.1.3")
        .ЗависитОт("v8find",            "0.1.3")
        .ЗависитОт("1commands",         "1.5.0")
        .ЗависитОт("cmdline",           "1.0.0")
        .ЗависитОт("1testrunner",       "1.7.0")
        .ЗависитОт("tempfiles",         "0.2.2")
        .ЗависитОт("reflector",         "0.6.1")
        .ЗависитОт("sql",               "1.1.1.2")
        .ИсполняемыйФайл("tools/cli.os");
        ;
