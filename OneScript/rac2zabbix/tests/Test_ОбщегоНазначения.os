#Использовать asserts
#Использовать v8find

#Использовать ".."

Перем ТекстовыйПотокRAC;
Перем КаталогВыполненияТестов;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт

    ЮнитТестирование = Неопределено;

    ВсеТесты = Новый Массив;

    ВсеТесты.Добавить("ТестДолжен_ПроверитьРезультатОпредесенияПутиКRAC");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьРасшифровкуВходящегоПотокДанных");

    Возврат ВсеТесты;

КонецФункции
 
Процедура ПередЗапускомТеста() Экспорт

    КаталогВыполненияТестов = ОбъединитьПути(ТекущийСценарий().Каталог, "data");
    ПутьКФайлуПотокаRAC = ОбъединитьПути(КаталогВыполненияТестов, "ИсходящийПотокRAC.txt");

    Файл = Новый Файл(ПутьКФайлуПотокаRAC);
    Если НЕ Файл.Существует() Тогда
        ВызватьИсключение СтрШаблон("Отсутствует тестовый файл %1", ПутьКФайлуПотокаRAC);
    КонецЕсли;

    ТекстовыйФайл = Новый ТекстовыйДокумент;
    ТекстовыйФайл.Прочитать(ПутьКФайлуПотокаRAC, КодировкаТекста.UTF8);
    ТекстовыйПотокRAC = ТекстовыйФайл.ПолучитьТекст();

КонецПроцедуры
 
Процедура ПослеЗапускаТеста() Экспорт

КонецПроцедуры

Процедура ТестДолжен_ПроверитьРезультатОпредесенияПутиКRAC() Экспорт

    ПутьКПлатформе = ОбщегоНазначения.ПутьКRAC("8.3");

    Ожидаем.Что(ПутьКПлатформе, "Ожидаем, что путь к RAC не пустая строка").Заполнено();

КонецПроцедуры

Процедура ТестДолжен_ПроверитьРасшифровкуВходящегоПотокДанных() Экспорт

    Ожидаем.Что(ТекстовыйПотокRAC, "Данные потока RAC есть строка").ИмеетТип("Строка");
    Ожидаем.Что(ТекстовыйПотокRAC, "Данные потока RAC не пустая строка").Заполнено();

    Попытка
        РезультатОбработкиПотока = ОбщегоНазначения.РасшифроватьПотокДанных("неверный формат потока");
    Исключение
        ТекстИсключения = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
    КонецПопытки;
    Ожидаем.Что(ТекстИсключения, "Ожидаем ошибку обработки входящего потока").Заполнено();
    Ожидаем.Что(ТекстИсключения, "тип исключения не верный").Равно("некорректный формат входного потока данных");

    РезультатОбработкиПотока = ОбщегоНазначения.РасшифроватьПотокДанных(ТекстовыйПотокRAC);

    Ожидаем.Что(РезультатОбработкиПотока, "Результат работы расшифровки потока - массив").ИмеетТип("Массив");
    Ожидаем.Что(РезультатОбработкиПотока, "Ожидаем что количество элементов в массиве 10").ИмеетДлину(10);

    Для Каждого ТекущийЭлемент Из РезультатОбработкиПотока Цикл
        Ожидаем.Что(ТекущийЭлемент, "Ожидаем что элемент массива - структура").ИмеетТип("Структура");
        Ожидаем.Что(ТекущийЭлемент, "Ожидаем что количество элементов в структуре - 48").ИмеетДлину(48);
        Для Каждого КлючЗначение Из ТекущийЭлемент Цикл
            КлючКорректный = СтрДлина(КлючЗначение.Ключ) = СтрДлина(СокрЛП(КлючЗначение.Ключ));
            ЗначениеКорректное = СтрДлина(КлючЗначение.Значение) = СтрДлина(СокрЛП(КлючЗначение.Значение));
            Ожидаем.Что(КлючКорректный, "Ожидаем, что ключ без пробельного префикса и постфикса").ЕстьИстина();
            Ожидаем.Что(ЗначениеКорректное, "Ожидаем, что значение без пробельного префикса и постфикса").ЕстьИстина();
        КонецЦикла;
    КонецЦикла;

КонецПроцедуры
