#Использовать sql

Перем Соединение;
Перем КоллекцияПолей;
Перем ОписаниеТаблицы;
Перем ИмяТаблицыSQLite;

Процедура ПриСозданииОбъекта(ПользовательскоеОписаниеТаблицы = Неопределено)
	
	ИмяТаблицыSQLite = "_inner_table";
	
	Соединение = Новый Соединение();
	Соединение.ТипСУБД = Соединение.ТипыСУБД.sqlite;
	Соединение.ИмяБазы = ":memory:";
	Соединение.Открыть();
	
	Если ПользовательскоеОписаниеТаблицы = Неопределено Тогда
		ОписаниеТаблицы = ОписаниеХранилищаЗначенийПоУмолчанию();
	Иначе
		ОписаниеТаблицы = ПользовательскоеОписаниеТаблицы;
	КонецЕсли;
	
	ИнициализироватьХранилищеЗначений();
	
КонецПроцедуры

Процедура ДобавитьСтроку(СтруктураПараметров) Экспорт

	УдаляемыеПоля = Новый Массив;
	Для Каждого ТекущийПараметр Из СтруктураПараметров Цикл
		Если КоллекцияПолей.Найти(ТекущийПараметр.Ключ) = Неопределено Тогда
			УдаляемыеПоля.Добавить(ТекущийПараметр.Ключ);
		КонецЕсли;
	КонецЦикла;

	Для Каждого УдаляемоеПоле Из УдаляемыеПоля Цикл
		СтруктураПараметров.Удалить(УдаляемоеПоле);
	КонецЦикла;
	
	ПараметрыЗапроса = Новый Структура;	
	Для Каждого ЭлементОписания Из ОписаниеТаблицы Цикл
		ИмяПоля = ЭлементОписания.Имя;
		ТипПоля = ЭлементОписания.Тип;
		Значение = ЗначениеПоляПоУмолчанию(ТипПоля);
		ПараметрыЗапроса.Вставить(ИмяПоля, Значение);
	КонецЦикла;

	ПустыеПоля = Новый Массив;
	Для Каждого ТекущийПараметр Из СтруктураПараметров Цикл
		Если НЕ ЗначениеЗаполнено(ТекущийПараметр.Значение) Тогда
			ПустыеПоля.Добавить(ТекущийПараметр.Ключ);
		КонецЕсли;
	КонецЦикла;

	ЗаполнитьЗначенияСвойств(ПараметрыЗапроса, СтруктураПараметров,, СтрСоединить(ПустыеПоля, ","));
	
	ИменаПолей = Новый Массив;
	ЗначенияПараметров = Новый Массив;
	Для Каждого ТекущийПараметр Из ПараметрыЗапроса Цикл
		ИменаПолей.Добавить(ТекущийПараметр.Ключ);
		ЗначенияПараметров.Добавить("@" + ТекущийПараметр.Ключ);
	КонецЦикла;
	
	ТекстЗапроса = СтрШаблон("INSERT INTO %1 (%2) VALUES (%3)",
			ИмяТаблицыSQLite, СтрСоединить(ИменаПолей, ","), СтрСоединить(ЗначенияПараметров, ","));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьСоединение(Соединение);
	Запрос.Текст = ТекстЗапроса;
	
	Для Каждого ТекущийПараметр Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(ТекущийПараметр.Ключ, ТекущийПараметр.Значение);
	КонецЦикла;
	
	Запрос.ВыполнитьКоманду();
	
КонецПроцедуры

Функция ПоляХранилищаЗначений() Экспорт
	
	Возврат КоллекцияПолей;
	
КонецФункции

Функция ВыполнитьЗапрос(ТекстЗапроса, ПараметрыЗапроса = Неопределено) Экспорт
	
	ПараметрыЗапроса = ?(ПараметрыЗапроса = Неопределено, Новый Структура, ПараметрыЗапроса);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "###", ИмяТаблицыSQLite);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьСоединение(Соединение);
	Запрос.Текст = ТекстЗапроса;
	
	Для Каждого ТекущийПараметр Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(ТекущийПараметр.Ключ, ТекущийПараметр.Значение);
	КонецЦикла;
	
	Результат = Новый Массив;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	ТаблицаВыборка = РезультатЗапроса.Выгрузить();
	КолонкиТаблицы = ТаблицаВыборка.Колонки;
	Для каждого СтрокаВыборка Из ТаблицаВыборка Цикл
		СтрокаПриемник = Новый Структура;
		Для Каждого Колонка Из КолонкиТаблицы Цикл
			СтрокаПриемник.Вставить(Колонка.Имя, СтрокаВыборка[Колонка.Имя]);
		КонецЦикла;
		Результат.Добавить(СтрокаПриемник);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ВычислитьЗначение(ТекстЗапроса, ПараметрыЗапроса = Неопределено) Экспорт
	
	Результат = Неопределено;
	
	ПараметрыЗапроса = ?(ПараметрыЗапроса = Неопределено, Новый Структура, ПараметрыЗапроса);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "###", ИмяТаблицыSQLite);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьСоединение(Соединение);
	Запрос.Текст = ТекстЗапроса;
	
	Для Каждого ТекущийПараметр Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(ТекущийПараметр.Ключ, ТекущийПараметр.Значение);
	КонецЦикла;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	ТаблицаВыборка = РезультатЗапроса.Выгрузить();
	
	Если ТаблицаВыборка.Колонки.Количество() > 1 ИЛИ ТаблицаВыборка.Количество() > 1 Тогда
		ВызватьИсключение "результат запроса не является скаляром";
	КонецЕсли;
	
	Для Каждого ТекущаяСтрока Из ТаблицаВыборка Цикл
		Для Каждого Колонка Из ТаблицаВыборка.Колонки Цикл
			Результат = ТекущаяСтрока[Колонка.Имя];
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ИзвлечьВсе() Экспорт
	
	ТекстЗапроса = СтрШаблон("SELECT * FROM %1", ИмяТаблицыSQLite);
	
	Возврат ВыполнитьЗапрос(ТекстЗапроса);
	
КонецФункции

Функция ПустаяСтрокаХранилища() Экспорт
	
	ПустаяСтрока = Новый Структура;
	
	Для Каждого Поле Из КоллекцияПолей Цикл
		ПустаяСтрока.Вставить(Поле);
	КонецЦикла;
	
	Возврат ПустаяСтрока;
	
КонецФункции

Функция ИмяХранилищаЗначений() Экспорт
	
	Возврат ИмяТаблицыSQLite;
	
КонецФункции

Процедура ИнициализироватьХранилищеЗначений()
	
	КоллекцияПолей = Новый Массив;
	Для Каждого ПолеТаблицы Из ОписаниеТаблицы Цикл
		КоллекцияПолей.Добавить(ПолеТаблицы.Имя);
	КонецЦикла;
	
	ЗапросВставка = Новый Запрос();
	ЗапросВставка.УстановитьСоединение(Соединение);
	ЗапросВставка.Текст = СхемаХранилищаЗначений();
	ЗапросВставка.ВыполнитьКоманду();
	
КонецПроцедуры

Функция СхемаХранилищаЗначений()
	
	МассивОписанияПолей = Новый Массив;
	Для Каждого Поле Из ОписаниеТаблицы Цикл
		МассивОписанияПолей.Добавить(СтрШаблон("%1 %2", Поле.Имя, Поле.Тип));
	КонецЦикла;
	
	ТекстСхемыЗапроса = СтрШаблон("CREATE TABLE %1 (%2)", ИмяТаблицыSQLite, СтрСоединить(МассивОписанияПолей, ","));
	
	Возврат ТекстСхемыЗапроса;
	
КонецФункции

Функция ОписаниеХранилищаЗначенийПоУмолчанию()
	
	ОписаниеТаблицы = Новый Массив;
	
	ОписаниеТаблицы.Добавить(Новый Структура("Имя, Тип", "key", "TEXT DEFAULT('')"));
	ОписаниеТаблицы.Добавить(Новый Структура("Имя, Тип", "value", "TEXT DEFAULT('')"));
	
	Возврат ОписаниеТаблицы;
	
КонецФункции

Функция ЗначениеПоляПоУмолчанию(ТипПоля) Экспорт
	
	Если СтрНайти(ВРег(ТипПоля), "DEFAULT") Тогда
		Значение = ПолеПоУмолчаниюИзТипа(ТипПоля);
	Иначе
		Если СтрНайти(ВРег(ТипПоля), "INTEGER") Тогда
			Значение = "0";
		Иначе
			Значение = "";
		КонецЕсли;
	КонецЕсли;

	Возврат Значение;
	
КонецФункции

Функция ПолеПоУмолчаниюИзТипа(ТипПоля)

	ПозицияDEFAULT = СтрНайти(Врег(ТипПоля), "DEFAULT");
	Начало = ПозицияDEFAULT + СтрДлина("DEFAULT") + 1;
	Позиция = Начало;
	Пока Позиция <= СтрДлина(ТипПоля) Цикл
		Если Сред(ТипПоля, Позиция, 1) = ")" Тогда
			Прервать;
		КонецЕсли;
		Позиция = Позиция + 1;
	КонецЦикла;

	ЗначениеПоУмолчанию = Сред(ТипПоля, Начало, Позиция - Начало);
	Если СтрНачинаетсяС(ЗначениеПоУмолчанию, "'") И СтрЗаканчиваетсяНа(ЗначениеПоУмолчанию, "'") Тогда
		ЗначениеПоУмолчанию = Сред(ЗначениеПоУмолчанию, 2, СтрДлина(ЗначениеПоУмолчанию) - 2);
	КонецЕсли;
	
	Возврат ЗначениеПоУмолчанию;
	
КонецФункции
